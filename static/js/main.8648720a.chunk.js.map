{"version":3,"sources":["components/error-indicator/index.jsx","components/error-indicator/error-indicator.jsx","components/error-boundry/index.jsx","components/error-boundry/error-boundry.jsx","services/pokeapi-service.jsx","components/pokeapi-service-context/pokeapi-service-context.jsx","components/spinner/index.jsx","components/spinner/spinner.jsx","components/hocs/with-data.jsx","components/hocs/with-selected-data.jsx","components/hocs/with-pokeapi-service.jsx","components/table/index.jsx","components/table/table.jsx","containers/pokemon-properties-container.jsx","components/item-details/index.jsx","components/item-details/item-details.jsx","containers/pokemon-details-container.jsx","components/type-item/index.jsx","components/type-item/type-item.jsx","components/types-list/index.jsx","components/types-list/types-list.jsx","components/pokemon-item/index.jsx","components/pokemon-item/pokemon-item.jsx","components/pokemons-list/index.jsx","components/pokemons-list/pokemons-list.jsx","components/button/index.jsx","components/button/button.jsx","containers/pokemon-list-container.jsx","components/row/index.jsx","components/row/row.jsx","components/pages/pokemon-page.jsx","components/header/index.jsx","components/header/header.jsx","components/app/index.jsx","components/app/app.jsx","index.jsx"],"names":["ErrorIndicator","className","ErrorBoundry","state","hasError","this","setState","props","children","Component","PokeapiService","_apiBase","getResource","url","a","fetch","response","ok","Error","status","json","getPokemonsChunkList","correctedUrl","Promise","all","results","map","pokemon","getPokemon","_extractId","list","next","getNextPokemonsChunkList","id","_transformPokemon","getPokemonDetails","_transformPokemonDetails","_transformTypes","types","type","slot","name","sprites","image","front_default","attack","stats","base_stat","defence","hp","speed","weight","moves","length","item","match","React","createContext","PokeapiServiceProvider","Provider","PokeapiServiceConsumer","Consumer","Spinner","withData","View","data","loading","prevProps","getData","chunksOnPage","update","then","withSelectedData","updateItem","itemId","withPokeapiService","mapMethodsToProps","Wrapped","pokeapiService","serviceProps","Table","typesList","value","key","Object","entries","values","ItemDetails","src","alt","num","toString","nullsArr","numArr","split","slice","getNumber","TypeItem","data-type","TypesList","items","PokemonItem","PokemonsList","onItemSelected","onClick","Button","onAddNextChunkOnPage","PokemonListContainer","propsList","onNextLinkUpdate","prevState","updateList","Row","left","right","PokemonPage","selectedItem","nextListChunkLink","pokemonListContainer","pokemonDetailsContainer","withRouter","Header","App","basename","path","component","exact","render","ReactDOM","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.8648720a.chunk.js","sourcesContent":["import ErrorIndicator from './error-indicator';\r\n\r\nexport default ErrorIndicator;","import React from 'react';\r\nimport './error-indicator.css';\r\n\r\nconst ErrorIndicator = () => {\r\n    return (\r\n        <div className=\"error-indicator\">\r\n            <span>Oops!</span>\r\n            <span>something has gone wrong</span>\r\n            <span>we will fix it soon</span>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default ErrorIndicator;","import ErrorBoundry from './error-boundry';\r\n\r\nexport default ErrorBoundry;","import React, { Component } from 'react';\r\nimport ErrorIndicator from '../error-indicator';\r\n\r\nexport default class ErrorBoundry extends Component {\r\n    state = {\r\n        hasError: false,\r\n    };\r\n\r\n    componentDidCatch() {\r\n        this.setState({\r\n            hasError: true,\r\n        });\r\n    };\r\n\r\n    render() {\r\n        if (this.state.hasError) {\r\n            return <ErrorIndicator />;\r\n        }\r\n        return this.props.children;\r\n    };\r\n};","import { Component } from 'react';\r\n\r\nexport default class PokeapiService extends Component {\r\n\r\n  _apiBase = 'https://pokeapi.co/api/v2/pokemon/?limit=12';\r\n\r\n  getResource = async (url) => {\r\n    const response = await fetch(url);\r\n\r\n    if (!response.ok) {\r\n      // option with displaying list under any conditions\r\n\r\n      // const id = this._extractId(url);\r\n      // this.getResource(`https://pokeapi.co/api/v2/pokemon/${id + 1}/`); \r\n      \r\n      throw new Error(`Could not fetch ${url}, received ${response.status}`);\r\n    }\r\n  \r\n    return await response.json();\r\n  };\r\n\r\n  getPokemonsChunkList = async (url) => {\r\n    let correctedUrl = url ? url : this._apiBase;\r\n\r\n    const response = await this.getResource(correctedUrl);\r\n\r\n    const list = await Promise.all(response.results.map(async (pokemon) => {\r\n      return await this.getPokemon(this._extractId(pokemon));\r\n    }));\r\n\r\n    return {\r\n      next: response.next,\r\n      list: list\r\n    };\r\n  };\r\n\r\n  getNextPokemonsChunkList = async (url) => {\r\n    const response = await this.getResource(url);\r\n\r\n    return await Promise.all(response.results.map(async (pokemon) => {\r\n      return await this.getPokemon(this._extractId(pokemon));\r\n    }));\r\n  };\r\n\r\n  getPokemon = async (id) => {\r\n    const pokemon = await this.getResource(`https://pokeapi.co/api/v2/pokemon/${id}/`);\r\n    return this._transformPokemon(pokemon);\r\n  };\r\n\r\n  getPokemonDetails = async (id) => {\r\n    const pokemon = await this.getResource(`https://pokeapi.co/api/v2/pokemon/${id}/`);\r\n    return this._transformPokemonDetails(pokemon);\r\n  };\r\n  \r\n  _transformTypes = (types) => {\r\n    return types.map((type) => { \r\n      return {\r\n        id: type.slot, \r\n        name: type.type.name \r\n      };\r\n    });\r\n  };\r\n\r\n  _transformPokemon = ({ id, name, types, sprites }) => {\r\n    return {\r\n      id: id,\r\n      name: name,\r\n      types: this._transformTypes(types),\r\n      image: sprites.front_default\r\n    };\r\n  };\r\n\r\n  _transformPokemonDetails = (pokemon) => {\r\n    return {\r\n      attack: pokemon.stats[1].base_stat,\r\n      defence: pokemon.stats[2].base_stat,\r\n      hp: pokemon.stats[0].base_stat,\r\n      'SP attack': pokemon.stats[3].base_stat,\r\n      'SP defense': pokemon.stats[4].base_stat,\r\n      speed: pokemon.stats[5].base_stat,\r\n      weight: pokemon.weight,\r\n      'total moves': pokemon.moves.length,\r\n    };\r\n  };\r\n\r\n  _extractId = (item) => {\r\n    const idRegExp = /\\/([0-9]+)*\\/$/;\r\n    return item.url.match(idRegExp)[1];\r\n  };\r\n};","import React from 'react';\r\n\r\nconst {\r\n    Provider: PokeapiServiceProvider,\r\n    Consumer: PokeapiServiceConsumer\r\n} = React.createContext();\r\n\r\nexport {\r\n    PokeapiServiceProvider,\r\n    PokeapiServiceConsumer\r\n};","import Spinner from './spinner';\r\n\r\nexport default Spinner;","import React from 'react';\r\nimport './spinner.css';\r\n\r\nconst Spinner = () => {\r\n    return (\r\n        <div className=\"loadingio-spinner-spinner-sqyo0fm8m1b\">\r\n            <div className=\"ldio-u9gmhq330vq\">\r\n                <div></div>\r\n                <div></div>\r\n                <div></div>\r\n                <div></div>\r\n                <div></div>\r\n                <div></div>\r\n                <div></div>\r\n                <div></div>\r\n                <div></div>\r\n                <div></div>\r\n                <div></div>\r\n                <div></div>\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default Spinner;","import React, { Component } from 'react';\r\nimport Spinner from '../spinner';\r\n\r\nconst withData = (View) => {\r\n    return class extends Component {\r\n  \r\n      state = {\r\n        data: null,\r\n        loading: true\r\n      };\r\n\r\n      componentDidUpdate(prevProps) {\r\n        const { getData, chunksOnPage } = this.props;\r\n\r\n        if (getData !== prevProps.getData\r\n          || chunksOnPage !== prevProps.chunksOnPage) {\r\n\r\n          // if (url !== prevProps.url && chunksOnPage !== prevProps.chunksOnPage) {\r\n            this.update();\r\n          // }        \r\n        }\r\n      };\r\n    \r\n      componentDidMount() {\r\n        this.update();\r\n      };\r\n\r\n      update() {\r\n        const { getData, url } = this.props;\r\n\r\n        getData(url)\r\n          .then((data) => {\r\n            this.setState({\r\n              data\r\n            });\r\n          });\r\n      };\r\n  \r\n      render() {\r\n        const { data } = this.state;\r\n  \r\n        if (!data) {\r\n          return <Spinner />;\r\n        }\r\n    \r\n        return <View { ...this.props } data={ data } />\r\n      };\r\n    };\r\n  };\r\n\r\n  export default withData;","import React, { Component } from 'react';\r\n\r\nconst withSelectedData = (View) => {\r\n  return class extends Component {\r\n\r\n    state = {\r\n      item: null,\r\n    };\r\n\r\n    componentDidMount() {\r\n        this.updateItem();\r\n    }\r\n\r\n    componentDidUpdate(prevProps) {\r\n        const { itemId, getData } = this.props;\r\n\r\n        if (itemId !== prevProps.itemId\r\n            || getData !== prevProps.getData) {\r\n\r\n                this.updateItem();\r\n        }\r\n    };\r\n\r\n    updateItem() {\r\n        const { itemId, getData } = this.props;\r\n\r\n        if (!itemId) {\r\n          return;\r\n        }\r\n\r\n        getData(itemId)\r\n            .then(item => {\r\n                this.setState({\r\n                    item: item,\r\n                });\r\n            });\r\n    };\r\n  \r\n      render() {\r\n        const { item } = this.state;\r\n  \r\n        if (!item) {\r\n          return '';\r\n        }\r\n    \r\n        return <View { ...this.props } item={ item } />\r\n      };\r\n    };\r\n  };\r\n\r\n  export default withSelectedData;","import React from 'react';\r\nimport { PokeapiServiceConsumer } from '../pokeapi-service-context';\r\n\r\nconst withPokeapiService = (mapMethodsToProps) => (Wrapped) => {\r\n\r\n    return (props) => {\r\n        return (\r\n            <PokeapiServiceConsumer>\r\n                {\r\n                    (pokeapiService) => {\r\n                        const serviceProps = mapMethodsToProps(pokeapiService);\r\n                        return (\r\n                            <Wrapped {...props} {...serviceProps} />\r\n                        );\r\n                    }\r\n                }\r\n            </PokeapiServiceConsumer>\r\n        );\r\n    };\r\n};\r\n\r\nexport default withPokeapiService;","import Table from './table';\r\n\r\nexport default Table;","import React from 'react';\r\nimport './table.css';\r\n\r\nconst Table = ({ typesList, list }) => {\r\n\r\n    const renderTypesRow = (value) => {\r\n        return (\r\n            <tr key={ value }>\r\n                <td>Type</td>\r\n                <td>{ value }</td>\r\n            </tr>\r\n        );\r\n    };\r\n\r\n    const renderRow = ([ idx, [ name, value ]]) => {\r\n        return (\r\n            <tr key={ name }>\r\n                <td>{ name }</td>\r\n                <td>{ value }</td>\r\n            </tr>\r\n        );\r\n    };\r\n\r\n    return (\r\n        <table className=\"table\">\r\n            <tbody>\r\n                { typesList.map(renderTypesRow) }\r\n                { Object.entries(list).map(renderRow) }\r\n            </tbody>\r\n        </table>\r\n    );\r\n};\r\n\r\nexport default Table;","import React from 'react';\r\nimport { withPokeapiService, withSelectedData } from '../components/hocs';\r\nimport Table from '../components/table';\r\n\r\nconst PokemonPropertiesContainer = ({ types, item }) => {\r\n    const typesList = Object.values(types).map(({ name }) => name);\r\n    const list = [...Object.entries(item)];\r\n    \r\n    return (\r\n        <Table typesList={ typesList } list={ list }/>\r\n    );\r\n};\r\n\r\nconst mapMethodsToProps  = (pokeapiService) => {\r\n    return {\r\n        getData: pokeapiService.getPokemonDetails\r\n    };\r\n};\r\n\r\nexport default withPokeapiService(mapMethodsToProps)(\r\n    withSelectedData(PokemonPropertiesContainer));","import ItemDetails from './item-details';\r\n\r\nexport default ItemDetails;","import React from 'react';\r\nimport './item-details.css';\r\n\r\nconst ItemDetails = ({ id, image, name, children }) => {\r\n    \r\n    const getNumber = (num) => {\r\n        if (num.toString().length >= 3) {\r\n            return num;\r\n        }\r\n\r\n        const nullsArr = [0, 0, 0];\r\n        const numArr = num.toString().split('');\r\n\r\n        return [\r\n            ...nullsArr.slice(0, nullsArr.length - numArr.length),\r\n            ...numArr\r\n        ];\r\n    };\r\n\r\n    return (\r\n        <div className=\"item-details\">\r\n            <div className=\"item-details__image-wrapper\">\r\n                <img src={ image } alt={ name } className=\"item-details__img\"/>\r\n            </div>\r\n            <h2 className=\"item-details__name\">{ name } #{ getNumber(id) }</h2>  \r\n            { children }\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default ItemDetails;","import React from 'react';\r\nimport { withPokeapiService, withSelectedData } from '../components/hocs';\r\nimport { PokemonPropertiesContainer } from '../containers';\r\nimport ItemDetails from '../components/item-details';\r\n\r\nconst PokemonDetailsContainer = ({ item }) => {\r\n    return (\r\n        <ItemDetails { ...item }>\r\n            <PokemonPropertiesContainer types={ item.types } itemId={ item.id } />\r\n        </ItemDetails>\r\n    );\r\n};\r\n\r\nconst mapMethodsToProps  = (pokeapiService) => {\r\n    return {\r\n        getData: pokeapiService.getPokemon\r\n    };\r\n};\r\n\r\nexport default withPokeapiService(mapMethodsToProps)(\r\n    withSelectedData(PokemonDetailsContainer));","import TypeItem from './type-item';\r\n\r\nexport default TypeItem;","import React from 'react';\r\nimport './type-item.css';\r\n\r\nconst TypeItem = ({ name }) => {\r\n    return (\r\n        <div className=\"type-item\" data-type={ name }>\r\n            <p className=\"type-item__title\">{ name }</p>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default TypeItem;","import TypesList from './types-list';\r\n\r\nexport default TypesList;","import React from 'react';\r\nimport TypeItem from '../type-item';\r\nimport './types-list.css';\r\n\r\nconst TypesList = ({ types }) => {\r\n    const items = types.map((type) => {\r\n        return (\r\n            <li className=\"types-list__item\" key={ type.id }>\r\n                <TypeItem name={ type.name } />\r\n            </li>\r\n        );\r\n    });\r\n\r\n    return (\r\n        <ul className=\"types-list\">{ items }</ul>\r\n    );\r\n};\r\n\r\nexport default TypesList;","import PokemonItem from './pokemon-item';\r\n\r\nexport default PokemonItem;","import React from 'react';\r\nimport TypesList from '../types-list';\r\nimport './pokemon-item.css';\r\n\r\nconst PokemonItem = ({ name, types, image }) => {\r\n    return (\r\n        <div className=\"pokemon-item\">\r\n            <div className=\"pokemon-item__img-wrapper\">\r\n                <img src={ image } alt={ name } className=\"pokemon-item__img\"/>\r\n            </div>         \r\n            <p className=\"pokemon-item__title\">{ name }</p>\r\n            <TypesList types={ types } />\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default PokemonItem;","import PokemonsList from './pokemons-list';\r\n\r\nexport default PokemonsList;","import React from 'react';\r\nimport PokemonItem from '../pokemon-item';\r\nimport './pokemons-list.css';\r\n\r\nconst PokemonsList = ({ list = [], onItemSelected }) => {\r\n    const items = list.map((item) => {\r\n        return (\r\n            <li onClick={ () => onItemSelected(item.id) }\r\n                className=\"pokemon-list__item\" key={ item.id }>\r\n                <PokemonItem { ...item } />\r\n            </li>\r\n        );\r\n    });\r\n\r\n    return (\r\n        <ul className=\"pokemon-list\">{ items }</ul>\r\n    );\r\n};\r\n\r\nexport default PokemonsList;","import Button from './button';\r\n\r\nexport default Button;","import React from 'react';\r\nimport './button.css';\r\n\r\nconst Button = ({ onAddNextChunkOnPage }) => {\r\n    return (\r\n        <button className=\"btn\" type=\"button\"\r\n            onClick={ () => onAddNextChunkOnPage() }>\r\n            Load More\r\n        </button>\r\n    );\r\n};\r\n\r\nexport default Button;","import React, { Fragment, Component } from 'react';\r\nimport { withPokeapiService, withData } from '../components/hocs';\r\nimport PokemonList from '../components/pokemons-list';\r\nimport Button from '../components/button';\r\n\r\nclass PokemonListContainer extends Component {\r\n\r\n    state = {\r\n        list: [],\r\n    };\r\n\r\n    updateList(propsList) {\r\n        const { list } = this.state;\r\n        const lastListItemId = list[list.length - 1].id;\r\n        const lastPropsListItemId = propsList[propsList.length - 1].id;\r\n\r\n        if (lastListItemId === lastPropsListItemId) {\r\n            return list;\r\n        }\r\n\r\n        return [\r\n            ...list,\r\n            ...propsList\r\n        ]\r\n    }\r\n\r\n    componentDidMount() {\r\n        const { data, onNextLinkUpdate } = this.props;\r\n\r\n        this.setState({ \r\n            list: data.list\r\n        });\r\n\r\n        onNextLinkUpdate(data.next);\r\n    };\r\n\r\n    componentDidUpdate(prevProps, prevState) {\r\n        const { data, onNextLinkUpdate, chunksOnPage } = this.props;\r\n\r\n        if ( onNextLinkUpdate !== prevProps.onNextLinkUpdate \r\n            || data.list !== prevProps.data.list\r\n            || data.next !== prevProps.data.next\r\n            || chunksOnPage !== prevProps.chunksOnPage) {\r\n\r\n                this.setState({ \r\n                    list: this.updateList(data.list),\r\n                });\r\n\r\n                onNextLinkUpdate(data.next);\r\n        };\r\n    };\r\n\r\n    render() {\r\n        const { onItemSelected, onAddNextChunkOnPage } = this.props;\r\n\r\n        return (\r\n            <Fragment>\r\n                <PokemonList list={ this.state.list } onItemSelected={ onItemSelected } />\r\n                <Button onAddNextChunkOnPage={ onAddNextChunkOnPage } />\r\n            </Fragment>\r\n        );\r\n    };\r\n};\r\n\r\nconst mapPersonMethodsToProps = (pokeapiService) => {\r\n    return {\r\n        getData: pokeapiService.getPokemonsChunkList\r\n    };\r\n};\r\n\r\nexport default withPokeapiService(mapPersonMethodsToProps)(\r\n    withData(PokemonListContainer));","import Row from './row';\r\n\r\nexport default Row;","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport './row.css';\r\n\r\nconst Row = ({ left, right }) => {\r\n    return (\r\n        <div className=\"row\">\r\n            <div className=\"row--lg\">\r\n                { left }\r\n            </div>\r\n            <div className=\"row--sm\">\r\n                { right }\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n\r\nRow.propTypes = {\r\n    left: PropTypes.node,\r\n    right: PropTypes.node,\r\n};\r\n\r\nexport default Row;","import React, { Component } from 'react';\r\nimport { withRouter } from 'react-router-dom';\r\nimport { PokemonDetailsContainer, PokemonListContainer } from '../../containers';\r\nimport Row from '../row';\r\n\r\nclass PokemonPage extends Component {\r\n\r\n    state= {\r\n        selectedItem: null,\r\n        nextListChunkLink: null,\r\n        chunksOnPage: 1\r\n    };\r\n\r\n    onItemSelected = (selectedItem) => {\r\n        this.setState({ selectedItem });\r\n    };\r\n\r\n    onNextLinkUpdate = (url) => {\r\n        this.setState({ \r\n            nextListChunkLink: url,\r\n        });\r\n    };\r\n\r\n    onAddNextChunkOnPage = () => {\r\n        this.setState((prevState) => { \r\n            return {\r\n                chunksOnPage: prevState.chunksOnPage + 1,\r\n                selectedItem: null\r\n            };\r\n        });\r\n    };\r\n\r\n    render() {\r\n        const { nextListChunkLink, selectedItem, chunksOnPage } = this.state;\r\n        let url = chunksOnPage !== 1 ? nextListChunkLink : '';\r\n\r\n        const pokemonListContainer = (\r\n            <PokemonListContainer \r\n                    onItemSelected={ this.onItemSelected } \r\n                    onNextLinkUpdate={ this.onNextLinkUpdate }\r\n                    url={ url } \r\n                    onAddNextChunkOnPage={ this.onAddNextChunkOnPage }\r\n                    chunksOnPage={ chunksOnPage } />\r\n        );\r\n\r\n        const pokemonDetailsContainer = (\r\n            selectedItem \r\n                ? <PokemonDetailsContainer itemId={ selectedItem } />\r\n                : ''\r\n        );\r\n\r\n        return (\r\n            <Row\r\n                left={ pokemonListContainer }\r\n                right={ pokemonDetailsContainer } />\r\n        );\r\n    };\r\n};\r\n\r\nexport default withRouter(PokemonPage);","import Header from './header';\r\n\r\nexport default Header;","import React from 'react';\r\nimport './header.css';\r\n\r\nconst Header = () => {\r\n    return (\r\n        <div className=\"header\">Pokedex</div>\r\n    );\r\n};\r\n\r\nexport default Header;","import App from './app';\r\n\r\nexport default App;","import React, { Component } from 'react';\r\nimport { BrowserRouter as Router, Switch, Route } from 'react-router-dom';\r\nimport ErrorBoundry from '../error-boundry';\r\nimport PokeapiService from '../../services/pokeapi-service';\r\nimport { PokeapiServiceProvider } from '../pokeapi-service-context';\r\nimport { PokemonPage } from '../pages';\r\nimport Header from '../header';\r\nimport './app.css';\r\n\r\nexport default class App extends Component {\r\n\r\n  state = {\r\n    hasError: false,\r\n    pokeapiService: new PokeapiService(),\r\n  };\r\n\r\n  componentDidCatch() {\r\n    this.setState({\r\n      hasError: true,\r\n    });\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <ErrorBoundry>\r\n        <PokeapiServiceProvider value={ this.state.pokeapiService }>\r\n          <Router basename=\"/pokedex\">         \r\n            <div className=\"app\">\r\n              <Header />\r\n              <Switch>\r\n                <Route path=\"/\" component={ PokemonPage } exact />\r\n                <Route render={() => <h2>Page not found</h2>} />\r\n              </Switch>\r\n            </div>\r\n          </Router>\r\n        </PokeapiServiceProvider>\r\n      </ErrorBoundry>\r\n    );\r\n  };\r\n};","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './components/app';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);"],"sourceRoot":""}